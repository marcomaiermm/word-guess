name: Deploy to Server

on:
  push:
    branches:
      - main # or whichever branch you want the deployment from

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@main

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@main
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build App
        uses: docker/build-push-action@v4
        with:
          context: .
          tags: ${{ secrets.DOCKER_USERNAME }}/word-guess:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          push: true

  deploy:
    runs-on: self-hosted
    setps:
      - uses: actions/checkout@main

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Pull the latest Docker image
        run: docker pull ravicmco/word-guess:latest

      - name: Stop and remove the previous container (if exists)
        run: |
          docker stop wordle || true
          docker rm wordle || true

      - name: Start container
        run: |
          docker run -d \
          --name wordle \
          --network cloudflaretunnel \
          --restart unless-stopped \
          -v wordle-data:/database.db \
          -l traefik.enable=true \
          -l traefik.http.services.wordle.loadbalancer.server.port=42069 \
          -l traefik.http.routers.wordle-http.entrypoints=http \
          -l "traefik.http.routers.wordle-http.rule=Host(`wordle.marcomaier.dev`)" \
          -l traefik.http.routers.wordle-https.entrypoints=https \
          -l "traefik.http.routers.wordle-https.rule=Host(`wordle.marcomaier.dev`)" \
          -l traefik.http.routers.wordle-https.tls=true \
          -l traefik.http.middlewares.https-redirect.redirectscheme.scheme=https \
          -l traefik.http.middlewares.https-redirect.redirectscheme.permanent=true \
          -l traefik.http.routers.wordle-http.middlewares=https-redirect \
          ravicmco/word-guess:latest
