name: Deploy to Server

on:
  push:
    branches:
      - main # or whichever branch you want the deployment from

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@main

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@main
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build App
        uses: docker/build-push-action@v4
        with:
          context: .
          tags: ${{ secrets.DOCKER_USERNAME }}/word-guess:latest
          platforms: linux/amd64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          push: true

      - name: Remove local images after build
        run: docker images --format "{{.Repository}}:{{.Tag}}" | grep 'word-guess' | xargs docker rmi -f

      - name: Deploy to server
        env:
          HOST: ${{secrets.SERVER_HOST}}
          USERNAME: ${{ secrets.SERVER_USERNAME }}
          KEY: ${{ secrets.SERVER_SSH_KEY }}
        run: |
          export PRIVATE_KEY_PATH=$(mktemp)
          echo "$KEY" > $PRIVATE_KEY_PATH
          chmod 600 "$PRIVATE_KEY_PATH"

          ssh -i $PRIVATE_KEY_PATH -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $HOST "\
           docker pull {{ secrets.DOCKER_USERNAME }}/word-guess:latest
           docker stop word-guess || true
           docker rm word-guess || true
           docker run -d --name word-guess --network tunnel -p 8080:42069 {{ secrets.DOCKER_USERNAME }}/word-guess:latest"
          rm "$PRIVATE_KEY_PATH"
